@model MonteCarlo_Shradha.Models.ForecastedProduct

@{
    ViewBag.Title = "Forecasted Product";
}

<html>
<head>
    <link rel="stylesheet" href="~/Content/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/css/Styles.css" />
    <title>@Model.productName | Forecast</title>
</head>
<body>
    <h1>@Model.productName</h1>
    <hr />
    <br />
    <div class="page-content">
        <div class="row">
            <h3 class="col-xs-6">Date: @Model.forecastDate</h3>
            <h3 class="col-xs-6">NRCode: @Model.nrCode</h3>
        </div>
        <div class="row">
            <div class="col-xs-6">
                <h3><strong>Assumptions</strong></h3>
                <h4>Iterations: @Model.iterations</h4>
                <h4>Number of previous months: @Model.numberOfPrevMonths</h4>
                <h4>Number of months to forecast for: @Model.numberOfForecastMonths</h4>
                <div class="row">
                    <div class="col-xs-6">
                        <h4>Lower Custom Percentages (%):</h4>
                        <ul>
                            @foreach (var percentage in Model.initialLowerPercentages)
                            {
                                <li>@percentage</li>
                            }
                        </ul>
                    </div>
                    <div class="col-xs-6">
                        <h4>Upper Custom Percentages (%):</h4>
                        <ul>
                            @foreach (var percentage in Model.initialUpperPercentages)
                            {
                                <li>@percentage</li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-xs-6">
                <h3><strong>Results</strong></h3>
                <h4>Total sales from @Model.predictedMonthlySales.ElementAt(Model.predictedMonthlySales.Count - Model.numberOfForecastMonths - 1).Key : @Model.lastMonthSales</h4>
                <h4>Total sales from month before @Model.predictedMonthlySales.First().Key : @Model.monthBeforeBacktestingSales</h4>
                <div>
                    <h4>Total Average % Difference</h4>
                    <ul>
                        @foreach (var percentage in Model.totalPercentageDifferences)
                        {
                            <li>@percentage</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <br />
    <div>
        <br />
        <br />
        <table border="1">
            <tr>
                <td></td> @*Kept empty for row names*@
                @foreach (var month in Model.predictedMonthlySales)
                {
                    if (month.Key == DateTime.Today.ToString("MMM yyyy")) //Separate current month & future months from previous months
                    {
                        <th colspan="3">@month.Key &nbsp; &nbsp;</th>
                    }
                    else
                    {
                        <th colspan="3">@month.Key &nbsp; &nbsp;</th>
                    }
                }
            </tr>
            <tr>
                <td></td> @*Kept empty for row names*@
            </tr>
            <tr>
                <td>
                    <h4>Actual Sales &nbsp; &nbsp;</h4>
                </td>
                @foreach (var actualSale in Model.actualMonthlySales)
                {
                    <td colspan="3" class="actual-predicted-sales">
                        <p>@actualSale.Value</p>
                    </td>
                }
            </tr>
            <tr>
                <td>
                    <h4>Predicted Sales &nbsp; &nbsp;</h4>
                </td>
                @foreach (var predictedSale in Model.predictedMonthlySales)
                {
                    <td colspan="3" class="actual-predicted-sales">
                        <p>@predictedSale.Value</p>
                    </td>
                }
            </tr>
            <tr>
                <td></td> @*Kept empty for row names*@
                @for (var i = 0; i < Model.predictedMonthlySales.Count; i++)
                {
                    if (i > 0) //Abbreviate column labels
                    {
                        <td>
                            <p>L</p>
                        </td>
                        <td>
                            <p>M</p>
                        </td>
                        <td>
                            <p>U</p>
                        </td>
                    }
                    else
                    {
                        <td>
                            <p>Lower</p>
                        </td>
                        <td>
                            <p>Median</p>
                        </td>
                        <td>
                            <p>Upper</p>
                        </td>
                    }
                }
            </tr>
            <tr>
                <td>
                    <h4>+/- 25% Bounds &nbsp; &nbsp;</h4>
                </td>
                @for (var i = 0; i < Model.monthlyLowerBounds.Count; i ++)
                {
                    var lBound = Model.monthlyLowerBounds.ElementAt(i); //Regularly referencing i doesn't work
                    var mean = Model.predictedMonthlySales.ElementAt(i);
                    var uBound = Model.monthlyUpperBounds.ElementAt(i);
                    <td>@lBound.Value</td>
                    <td>@mean.Value</td>
                    <td>@uBound.Value</td>
                }
            </tr>
            <tr>
                <td>
                    <h4>+/- 5% Bounds &nbsp; &nbsp;</h4>
                </td>
                @for (var i = 0; i < Model.ninetyFiveLowerBounds.Count; i ++)
                {
                    var lBound = Model.ninetyFiveLowerBounds.ElementAt(i);
                    var mean = Model.predictedMonthlySales.ElementAt(i);
                    var uBound = Model.ninetyFiveUpperBounds.ElementAt(i);
                    <td>@lBound.Value</td>
                    <td>@mean.Value</td>
                    <td>@uBound.Value</td>
                }
            </tr>
            <tr>
                <td>
                    <h4>Sales Diff. &nbsp; &nbsp;</h4>
                </td>
                @for (var i = 0; i < Model.meanSalesDifference.Count; i ++)
                {
                    var mDifference = Model.meanSalesDifference.ElementAt(i);
                    var lDifference = Model.lowerSalesDifference.ElementAt(i);
                    var uDifference = Model.upperSalesDifference.ElementAt(i);
                    <td>@mDifference.Value</td>
                    <td>@lDifference.Value</td>
                    <td>@uDifference.Value</td>
                }
            </tr>
            <tr>
                <td>
                    <h4>% Diff. &nbsp; &nbsp;</h4>
                </td>
                @for (var i = 0; i < Model.meanPercentageDifference.Count; i++)
                {
                    var mDifference = Model.meanPercentageDifference.ElementAt(i);
                    var lDifference = Model.lowerPercentageDifference.ElementAt(i);
                    var uDifference = Model.upperPercentageDifference.ElementAt(i);
                    <td>@mDifference.Value</td>
                    <td>@lDifference.Value</td>
                    <td>@uDifference.Value</td>
                }
            </tr>
        </table>
    </div>
</body>
</html>
